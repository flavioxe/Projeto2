{"version":3,"sources":["components/UserList.jsx","index.js"],"names":["UserList","useState","usuario","setUsuario","showModal","setShowModal","selectClient","setSelectClient","setCard","modalTransaction","setmodalTransaction","transaction","setTransaction","payment","setPayment","cards","id","card_number","cvv","expiry_date","useEffect","axios","get","then","res","user","data","map","item","className","src","img","alt","name","username","onClick","botaoPagar","style","display","type","placeholder","card","value","substr","evt","preventDefault","paramJson","fetch","method","body","response","json","console","log","status","rootDiv","document","getElementById","ReactDOM","render"],"mappings":"4MAGe,SAASA,IAEpB,MAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAAwCJ,mBAAS,IAAjD,mBAAOK,EAAP,KAAqBC,EAArB,KACA,EAAwBN,mBAAS,IAAjC,mBAAaO,GAAb,WACA,EAAgDP,mBAAS,QAAzD,mBAAOQ,EAAP,KAAyBC,EAAzB,KACA,EAAsCT,mBAAS,IAA/C,mBAAOU,EAAP,KAAoBC,EAApB,KACA,EAA8BX,mBAAS,IAAvC,mBAAOY,EAAP,KAAgBC,EAAhB,KAGMC,EAAQ,CAEV,CACIC,GAAI,EACJC,YAAa,mBACbC,IAAK,IACLC,YAAa,SAGjB,CACIH,GAAI,EACJC,YAAa,mBACbC,IAAK,IACLC,YAAa,UAKrBC,qBAAU,WACNC,IAAMC,IAAN,oDACKC,MAAK,SAAAC,GACF,IAAMC,EAAOD,EAAIE,KACjBvB,EAAWsB,QAEpB,IA6CH,OACI,0CAEKvB,EAAQyB,KAAI,SAACC,GAAD,OACT,sBAAKC,UAAU,UAAf,UACI,8BACI,qBAAKA,UAAU,WAAWC,IAAKF,EAAKG,IAAKC,IAAI,0BAEjD,sBAAKH,UAAU,WAAf,UACI,yCACWD,EAAKK,QAEhB,uCACSL,EAAKZ,GADd,gBAC+BY,EAAKM,eAGxC,8BACI,wBAAQL,UAAU,aAAaM,QAAS,kBA3DzC,SAACP,GAChBvB,EAAa,SACbE,EAAgBqB,GAyD8CQ,CAAWR,IAAzD,2BAMZ,qBAAKC,UAAU,WAAWM,QAAS,kBAAM9B,GAAa,IAAQgC,MAAO,CAAEC,QAAUlC,EAAY,QAAU,UAEvG,sBAAKyB,UAAU,QAAQQ,MAAO,CAAEC,QAAUlC,EAAY,QAAU,QAAhE,UACI,sBAAKyB,UAAU,cAAf,UACI,sBAAMA,UAAU,aAAhB,+BACA,sBAAMA,UAAU,gBAAhB,SACKvB,EAAa2B,UAGtB,sBAAKJ,UAAU,YAAf,UACI,uBAAOA,UAAU,aAAaU,KAAK,OAAOC,YAAY,YACtD,wBAAQX,UAAU,cAAlB,SACKd,EAAMY,KACH,SAAAc,GAAI,OACA,yBAAQC,MAAOD,EAAKzB,GAApB,iCACsByB,EAAKxB,YAAY0B,QAAQ,KADlBF,EAAKzB,SAM9C,qBAAKa,UAAU,aAAf,SACI,wBAAQA,UAAU,cAAcM,QA3ErC,SAACS,GACZA,EAAIC,eAAeD,GAEnB,IAAME,EAAY,CACd,YAAe/B,EAAME,YACrB,IAAOF,EAAMG,IACb,YAAeH,EAAMI,YACrB,oBAAuBb,EAAaU,GACpC,MAASH,GAGbkC,MAAM,+DAAgE,CAClEC,OAAQ,OACRC,KAAMH,IAELvB,MAAK,SAAA2B,GAAQ,OAAIA,EAASC,UAC1B5B,MAAK,SAACG,GACH0B,QAAQC,IAAI3B,GACZrB,EAAa,QACbK,EAAoB,SAEA,aAAhBgB,EAAK4B,OACL1C,EAAe,uCAGfA,EAAe,sDAkDX,2BAMZ,sBAAKiB,UAAU,mBAAmBQ,MAAO,CAAEC,QAAS7B,GAApD,UACI,sBAAKoB,UAAU,qBAAf,UACI,sBAAMA,UAAU,aAAhB,iCACA,sBAAMA,UAAU,aAAaM,QAAS,kBAzFlDrB,EAAW,IACXN,EAAQ,SACRE,EAAoB,SAuFR,oBAEJ,8BACI,uBAAMmB,UAAU,mBAAhB,cAAqClB,aCrIzD,IAAM4C,EAAUC,SAASC,eAAe,QAExCC,IAASC,OACP,8BAEE,cAAC3D,EAAD,MAEFuD,K","file":"static/js/main.97437fae.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from 'axios';\r\n\r\nexport default function UserList() {\r\n\r\n    const [usuario, setUsuario] = useState([]);\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [selectClient, setSelectClient] = useState({});\r\n    const [card, setCard] = useState(\"\");\r\n    const [modalTransaction, setmodalTransaction] = useState(\"none\");\r\n    const [transaction, setTransaction] = useState(\"\");\r\n    const [payment, setPayment] = useState(\"\");\r\n    // Primeiro vem a variável criada dentro da state e depois a função usada pra jogar os valores para a variável\r\n\r\n    const cards = [\r\n        // valid card\r\n        {\r\n            id: 0,\r\n            card_number: '1111111111111111',\r\n            cvv: 789,\r\n            expiry_date: '01/18',\r\n        },\r\n        // invalid card\r\n        {\r\n            id: 1,\r\n            card_number: '4111111111111234',\r\n            cvv: 123,\r\n            expiry_date: '01/20',\r\n        },\r\n    ];\r\n\r\n    // Consumo da API para listar usuários\r\n    useEffect(() => { /*Evita loop, carrega apenas uma vez*/\r\n        axios.get(`https://www.mocky.io/v2/5d531c4f2e0000620081ddce`)\r\n            .then(res => {\r\n                const user = res.data;\r\n                setUsuario(user);\r\n            })\r\n    }, [])\r\n\r\n\r\n    const botaoPagar = (item) => {\r\n        setShowModal(\"block\")\r\n        setSelectClient(item)\r\n    }\r\n\r\n    const reset = () => {\r\n        setPayment(\"\")\r\n        setCard(\"\")\r\n        setmodalTransaction(\"none\")\r\n    }\r\n\r\n    const enviar = (evt) => {\r\n        evt.preventDefault(evt)\r\n\r\n        const paramJson = {\r\n            \"card_number\": cards.card_number,\r\n            \"cvv\": cards.cvv,\r\n            \"expiry_date\": cards.expiry_date,\r\n            \"destination_user_id\": selectClient.id,\r\n            \"value\": payment\r\n        }\r\n\r\n        fetch(\"https://run.mocky.io/v3/533cd5d7-63d3-4488-bf8d-4bb8c751c989\", {\r\n            method: \"post\",\r\n            body: paramJson\r\n        })\r\n            .then(response => response.json())\r\n            .then((data) => {\r\n                console.log(data)\r\n                setShowModal(\"none\")\r\n                setmodalTransaction(\"block\")\r\n\r\n                if (data.status === \"Aprovada\") {\r\n                    setTransaction(\"Pagamento Concluído Com Sucesso!\")\r\n\r\n                } else {\r\n                    setTransaction(\"Pagamento NÃO foi Concluído com Sucesso!\")\r\n                }\r\n            })\r\n    }\r\n\r\n\r\n    return (\r\n        <>  {/* tag de separação */}\r\n            {/* Listagem de usuários */}\r\n            {usuario.map((item) =>\r\n                <div className=\"boxUser\" >\r\n                    <div>\r\n                        <img className=\"iconUser\" src={item.img} alt=\"Imagem dousuário\" />\r\n                    </div>\r\n                    <div className=\"infoUser\">\r\n                        <div>\r\n                            Nome: {item.name}\r\n                        </div>\r\n                        <div>\r\n                            ID: {item.id} - Username: {item.username}\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <button className=\"buttonUser\" onClick={() => botaoPagar(item)}>Pagar</button>\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n            {/* Modal Payment */}\r\n            <div className=\"backdrop\" onClick={() => setShowModal(false)} style={{ display: (showModal ? 'block' : 'none') }}>\r\n            </div>\r\n            <div className=\"modal\" style={{ display: (showModal ? 'block' : 'none') }}>\r\n                <div className=\"headerModal\">\r\n                    <span className=\"titleModal\"> Pagamento para  </span>\r\n                    <span className=\"userNameModal\">\r\n                        {selectClient.name}\r\n                    </span>\r\n                </div>\r\n                <div className=\"bodyModal\">\r\n                    <input className=\"inputModal\" type=\"text\" placeholder=\"R$ 0,00\"></input>\r\n                    <select className=\"selectModal\">\r\n                        {cards.map(\r\n                            card => (\r\n                                <option value={card.id} key={card.id}>\r\n                                    Cartão com final {card.card_number.substr(-4)}\r\n                                </option>\r\n                            )\r\n                        )}\r\n                    </select>\r\n                    <div className=\"buttonsDiv\">\r\n                        <button className=\"buttonModal\" onClick={enviar}>Pagar</button>\r\n                        {/* <button className=\"buttonModal\" type=\"reset\" onClick={() => setShowModal(\"none\")}>Cancelar</button> */}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {/* Modal do Recibo de Pagamento         */}\r\n            <div className=\"modalTransaction\" style={{ display: modalTransaction }} >\r\n                <div className=\"headerModalPayment\">\r\n                    <span className=\"titleModal\">Recibo de Pagamento</span>\r\n                    <span className=\"closeModal\" onClick={() => reset()}> X </span>\r\n                </div>\r\n                <div>\r\n                    <span className=\"bodyModalPayment\"> {transaction}</span>\r\n                </div>\r\n            </div>\r\n        </> /* tag de separação */\r\n    )\r\n}\r\n\r\n// https://www.digitalocean.com/community/tutorials/react-axios-react-pt - POST\r\n// https://www.npmjs.com/package/react-infinite-scroll-component - INFINTE SCROLL\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport UserList from './components/UserList'\n// import Teste from './components/Teste'\n\nconst rootDiv = document.getElementById('root');\n\nReactDOM.render(\n  <div>\n    {/* <Teste /> */}\n    <UserList />\n  </div>,\n  rootDiv);\n\n"],"sourceRoot":""}